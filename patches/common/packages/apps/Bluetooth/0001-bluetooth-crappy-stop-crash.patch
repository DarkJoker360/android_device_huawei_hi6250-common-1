From 87d17899d4024950f50d59545b066a50d2415585 Mon Sep 17 00:00:00 2001
From: Meticulus <theonejohnnyd@gmail.com>
Date: Fri, 20 Apr 2018 17:16:26 -0500
Subject: [PATCH] "0001-bluetooth-crappy-stop-crash
 _______________________________

*Previous From 8fe95bb7b8581b696732b8bb2dfb35c6515b3ae1 Mon Sep 17 00:00:00 2001
*Previous From: Meticulus <theonejohnnyd@gmail.com>
*Previous Date: Thu, 19 Apr 2018 13:20:36 -0500
*Previous Subject: [PATCH] "0001-bluetooth-crappy-stop-crash
*_______________________________
*
**Previous From 4130efefb992ce00e44c2518a71409eebe54d728 Mon Sep 17 00:00:00 2001
**Previous From: Meticulus <theonejohnnyd@gmail.com>
**Previous Date: Wed, 18 Apr 2018 15:45:19 -0500
**Previous Subject: [PATCH] bluetooth: crappy stop crash
**
**Change-Id: Id5866aec0521d8ecc5753ad6c3d8bd1f03ccc498"
*
*Change-Id: I7357d577557078bcaef661205cca3833fe8c9f53"

Change-Id: I2bca71f20c99280e04aca7ba90b8e2ece12c5d7b
---
 Android.mk                                           |  2 +-
 jni/com_android_bluetooth_a2dp.cpp                   |  8 +++++---
 jni/com_android_bluetooth_a2dp_sink.cpp              |  8 +++++---
 jni/com_android_bluetooth_avrcp.cpp                  | 20 ++++++++++++++------
 jni/com_android_bluetooth_avrcp_controller.cpp       |  4 ++--
 ...om_android_bluetooth_btservice_AdapterService.cpp |  3 ++-
 jni/com_android_bluetooth_gatt.cpp                   |  4 ++--
 jni/com_android_bluetooth_hdp.cpp                    |  2 +-
 8 files changed, 32 insertions(+), 19 deletions(-)

diff --git a/Android.mk b/Android.mk
index 97390fd..36f3cc3 100644
--- a/Android.mk
+++ b/Android.mk
@@ -28,7 +28,7 @@ LOCAL_STATIC_ANDROID_LIBRARIES := \
         android-support-v4
 LOCAL_PROTOC_OPTIMIZE_TYPE := micro
 
-LOCAL_REQUIRED_MODULES := bluetooth.default
+#LOCAL_REQUIRED_MODULES := bluetooth.default
 
 LOCAL_PROGUARD_ENABLED := disabled
 
diff --git a/jni/com_android_bluetooth_a2dp.cpp b/jni/com_android_bluetooth_a2dp.cpp
index 26c9359..d2961ef 100644
--- a/jni/com_android_bluetooth_a2dp.cpp
+++ b/jni/com_android_bluetooth_a2dp.cpp
@@ -59,10 +59,11 @@ static void bta2dp_connection_state_callback(btav_connection_state_t state,
     ALOGE("Fail to new jbyteArray bd addr for connection state");
     return;
   }
-
+  ALOGE("Meticulus state: %d", state);
   sCallbackEnv->SetByteArrayRegion(addr.get(), 0, sizeof(RawAddress),
                                    (jbyte*)bd_addr);
-  sCallbackEnv->CallVoidMethod(mCallbacksObj, method_onConnectionStateChanged,
+  if(mCallbacksObj)
+  	sCallbackEnv->CallVoidMethod(mCallbacksObj, method_onConnectionStateChanged,
                                (jint)state, addr.get());
 }
 
@@ -81,6 +82,7 @@ static void bta2dp_audio_state_callback(btav_audio_state_t state,
 
   sCallbackEnv->SetByteArrayRegion(addr.get(), 0, sizeof(RawAddress),
                                    (jbyte*)bd_addr);
+  if(mCallbacksObj)
   sCallbackEnv->CallVoidMethod(mCallbacksObj, method_onAudioStateChanged,
                                (jint)state, addr.get());
 }
@@ -294,7 +296,7 @@ static void cleanupNative(JNIEnv* env, jobject object) {
     return;
   }
 
-  if (sBluetoothA2dpInterface != NULL) {
+  if (sBluetoothA2dpInterface != NULL && sBluetoothA2dpInterface->cleanup != NULL) {
     sBluetoothA2dpInterface->cleanup();
     sBluetoothA2dpInterface = NULL;
   }
diff --git a/jni/com_android_bluetooth_a2dp_sink.cpp b/jni/com_android_bluetooth_a2dp_sink.cpp
index 989cd6f..1358eed 100644
--- a/jni/com_android_bluetooth_a2dp_sink.cpp
+++ b/jni/com_android_bluetooth_a2dp_sink.cpp
@@ -45,10 +45,11 @@ static void bta2dp_connection_state_callback(btav_connection_state_t state,
     ALOGE("Fail to new jbyteArray bd addr for connection state");
     return;
   }
-
+  ALOGE("Meticulus state: %d", state);
   sCallbackEnv->SetByteArrayRegion(addr.get(), 0, sizeof(RawAddress),
                                    (jbyte*)bd_addr);
-  sCallbackEnv->CallVoidMethod(mCallbacksObj, method_onConnectionStateChanged,
+  if(mCallbacksObj)
+  	sCallbackEnv->CallVoidMethod(mCallbacksObj, method_onConnectionStateChanged,
                                (jint)state, addr.get());
 }
 
@@ -67,6 +68,7 @@ static void bta2dp_audio_state_callback(btav_audio_state_t state,
 
   sCallbackEnv->SetByteArrayRegion(addr.get(), 0, sizeof(RawAddress),
                                    (jbyte*)bd_addr);
+  if(mCallbacksObj)
   sCallbackEnv->CallVoidMethod(mCallbacksObj, method_onAudioStateChanged,
                                (jint)state, addr.get());
 }
@@ -155,7 +157,7 @@ static void cleanupNative(JNIEnv* env, jobject object) {
     return;
   }
 
-  if (sBluetoothA2dpInterface != NULL) {
+  if (sBluetoothA2dpInterface != NULL && sBluetoothA2dpInterface->cleanup != NULL) {
     sBluetoothA2dpInterface->cleanup();
     sBluetoothA2dpInterface = NULL;
   }
diff --git a/jni/com_android_bluetooth_avrcp.cpp b/jni/com_android_bluetooth_avrcp.cpp
index d365b53..b2677ad 100644
--- a/jni/com_android_bluetooth_avrcp.cpp
+++ b/jni/com_android_bluetooth_avrcp.cpp
@@ -569,7 +569,7 @@ static void initNative(JNIEnv* env, jobject object) {
 
   if (sBluetoothAvrcpInterface != NULL) {
     ALOGW("Cleaning up Avrcp Interface before initializing...");
-    sBluetoothAvrcpInterface->cleanup();
+    //sBluetoothAvrcpInterface->cleanup();
     sBluetoothAvrcpInterface = NULL;
   }
 
@@ -605,7 +605,7 @@ static void cleanupNative(JNIEnv* env, jobject object) {
   }
 
   if (sBluetoothAvrcpInterface != NULL) {
-    sBluetoothAvrcpInterface->cleanup();
+    //sBluetoothAvrcpInterface->cleanup();
     sBluetoothAvrcpInterface = NULL;
   }
 
@@ -777,7 +777,7 @@ static jboolean registerNotificationRspPlayStatusNative(JNIEnv* env,
     ALOGE("%s: sBluetoothAvrcpInterface is null", __func__);
     return JNI_FALSE;
   }
-
+#if 0
   btrc_register_notification_t param;
   param.play_status = (btrc_play_status_t)playStatus;
 
@@ -788,6 +788,8 @@ static jboolean registerNotificationRspPlayStatusNative(JNIEnv* env,
   }
 
   return (status == BT_STATUS_SUCCESS) ? JNI_TRUE : JNI_FALSE;
+#endif
+  return JNI_FALSE;
 }
 
 static jboolean registerNotificationRspTrackChangeNative(JNIEnv* env,
@@ -811,7 +813,7 @@ static jboolean registerNotificationRspTrackChangeNative(JNIEnv* env,
     param.track[uid_idx] = trk[uid_idx];
     uid = uid + (trk[uid_idx] << (BTRC_UID_SIZE - 1 - uid_idx));
   }
-
+#if 0
   ALOGV("%s: Sending track change notification: %d -> %llu", __func__, type,
         uid);
 
@@ -823,6 +825,8 @@ static jboolean registerNotificationRspTrackChangeNative(JNIEnv* env,
 
   env->ReleaseByteArrayElements(track, trk, 0);
   return (status == BT_STATUS_SUCCESS) ? JNI_TRUE : JNI_FALSE;
+#endif
+  return JNI_FALSE;
 }
 
 static jboolean registerNotificationRspPlayPosNative(JNIEnv* env,
@@ -835,7 +839,7 @@ static jboolean registerNotificationRspPlayPosNative(JNIEnv* env,
 
   btrc_register_notification_t param;
   param.song_pos = (uint32_t)playPos;
-
+#if 0
   bt_status_t status = sBluetoothAvrcpInterface->register_notification_rsp(
       BTRC_EVT_PLAY_POS_CHANGED, (btrc_notification_type_t)type, &param);
   if (status != BT_STATUS_SUCCESS) {
@@ -843,6 +847,8 @@ static jboolean registerNotificationRspPlayPosNative(JNIEnv* env,
   }
 
   return (status == BT_STATUS_SUCCESS) ? JNI_TRUE : JNI_FALSE;
+#endif
+  return BT_STATUS_SUCCESS;
 }
 
 static jboolean registerNotificationRspNowPlayingChangedNative(JNIEnv* env,
@@ -913,7 +919,7 @@ static jboolean registerNotificationRspAvalPlayerChangedNative(JNIEnv* env,
     ALOGE("%s: sBluetoothAvrcpInterface is null", __func__);
     return JNI_FALSE;
   }
-
+#if 0
   btrc_register_notification_t param;
   bt_status_t status = sBluetoothAvrcpInterface->register_notification_rsp(
       BTRC_EVT_AVAL_PLAYER_CHANGE, (btrc_notification_type_t)type, &param);
@@ -925,6 +931,8 @@ static jboolean registerNotificationRspAvalPlayerChangedNative(JNIEnv* env,
   }
 
   return (status == BT_STATUS_SUCCESS) ? JNI_TRUE : JNI_FALSE;
+#endif
+  return JNI_FALSE;
 }
 
 static jboolean setVolumeNative(JNIEnv* env, jobject object, jint volume) {
diff --git a/jni/com_android_bluetooth_avrcp_controller.cpp b/jni/com_android_bluetooth_avrcp_controller.cpp
index 40982ee..0bab633 100644
--- a/jni/com_android_bluetooth_avrcp_controller.cpp
+++ b/jni/com_android_bluetooth_avrcp_controller.cpp
@@ -675,7 +675,7 @@ static void initNative(JNIEnv* env, jobject object) {
 
   if (sBluetoothAvrcpInterface != NULL) {
     ALOGW("Cleaning up Avrcp Interface before initializing...");
-    sBluetoothAvrcpInterface->cleanup();
+    //sBluetoothAvrcpInterface->cleanup();
     sBluetoothAvrcpInterface = NULL;
   }
 
@@ -713,7 +713,7 @@ static void cleanupNative(JNIEnv* env, jobject object) {
   }
 
   if (sBluetoothAvrcpInterface != NULL) {
-    sBluetoothAvrcpInterface->cleanup();
+    //sBluetoothAvrcpInterface->cleanup();
     sBluetoothAvrcpInterface = NULL;
   }
 
diff --git a/jni/com_android_bluetooth_btservice_AdapterService.cpp b/jni/com_android_bluetooth_btservice_AdapterService.cpp
index dc2e07a..e1f823f 100644
--- a/jni/com_android_bluetooth_btservice_AdapterService.cpp
+++ b/jni/com_android_bluetooth_btservice_AdapterService.cpp
@@ -688,7 +688,8 @@ static bool cleanupNative(JNIEnv* env, jobject obj) {
 
   if (!sBluetoothInterface) return JNI_FALSE;
 
-  sBluetoothInterface->cleanup();
+  if(sBluetoothInterface->cleanup != NULL)
+	sBluetoothInterface->cleanup();
   ALOGI("%s: return from cleanup", __func__);
 
   env->DeleteGlobalRef(sJniCallbacksObj);
diff --git a/jni/com_android_bluetooth_gatt.cpp b/jni/com_android_bluetooth_gatt.cpp
index 3bfbcfd..4b5f16e 100644
--- a/jni/com_android_bluetooth_gatt.cpp
+++ b/jni/com_android_bluetooth_gatt.cpp
@@ -915,7 +915,7 @@ static void cleanupNative(JNIEnv* env, jobject object) {
   if (!btIf) return;
 
   if (sGattIf != NULL) {
-    sGattIf->cleanup();
+    //sGattIf->cleanup();
     sGattIf = NULL;
   }
 
@@ -962,7 +962,7 @@ void btgattc_register_scanner_cb(bt_uuid_t app_uuid, uint8_t scannerId,
 
 static void registerScannerNative(JNIEnv* env, jobject object,
                                   jlong app_uuid_lsb, jlong app_uuid_msb) {
-  if (!sGattIf) return;
+  if (sGattIf) return;
 
   bt_uuid_t uuid;
   set_uuid(uuid.uu, app_uuid_msb, app_uuid_lsb);
diff --git a/jni/com_android_bluetooth_hdp.cpp b/jni/com_android_bluetooth_hdp.cpp
index 3abc243..d80af94 100644
--- a/jni/com_android_bluetooth_hdp.cpp
+++ b/jni/com_android_bluetooth_hdp.cpp
@@ -131,7 +131,7 @@ static void cleanupNative(JNIEnv* env, jobject object) {
 
   if (sBluetoothHdpInterface != NULL) {
     ALOGW("Cleaning up Bluetooth Health Interface...");
-    sBluetoothHdpInterface->cleanup();
+    //sBluetoothHdpInterface->cleanup();
     sBluetoothHdpInterface = NULL;
   }
 
-- 
2.7.4

